" ─────────────────────────────────────────────────────────────────────────────┐
"                                                                              │
" Name:    elems/plugins/langs/python.vim.tt                                   │
" Summary: Configure plugins related to language: `python`.                    │
"                                                                              │
" Authors:                                                                     │
"   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              │
"                                                                              │
" Project:                                                                     │
"   - Homepage:        https://github.com/alem0lars/configs-vim                │
"   - Getting started: see README.md in the project root folder                │
"                                                                              │
" License: Apache v2.0 (see below)                                             │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
"                                                                              │
" Licensed to the Apache Software Foundation (ASF) under one more contributor  │
" license agreements.  See the NOTICE file distributed with this work for      │
" additional information regarding copyright ownership. The ASF licenses this  │
" file to you under the Apache License, Version 2.0 (the "License"); you may   │
" not use this file except in compliance with the License.                     │
" You may obtain a copy of the License at                                      │
"                                                                              │
"   http://www.apache.org/licenses/LICENSE-2.0                                 │
"                                                                              │
" Unless required by applicable law or agreed to in writing, software          │
" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    │
" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             │
" See the License for the specific language governing permissions and          │
" limitations under the License.                                               │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
<% define_locals do
  variable :"vim.leaders.local", type: :string, as: :leader
end %>
" ─────────────────────────────────────────────────────────────────────────────┘


" ────────────────────────────────────────────────────────────────── Declare ──┐
function! plugins#langs#python#declare() abort
  <% if has_feature? :vanilla %>
  Plug 'davidhalter/jedi-vim'
  <% end %>
  <% if has_feature? :neovim %>
  Plug 'zchee/deoplete-jedi'
  <% end %>
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" ──────────────────────────────────────────────────────────────── Configure ──┐
function! plugins#langs#python#configure() abort
  " ─────────────────────────────────────────────────────── Fold ← Configure ──┤
  autocmd FileType python setlocal foldmethod=syntax
  " ────────────────────────────────────────── Vim-Kind-specific ← Configure ──┤
  <% if has_feature? :vanilla %>
  call s:configure_vanilla()
  <% end %>
  <% if has_feature? :neovim %>
  call s:configure_neovim()
  <% end %>
endfunction
" ────────────────────────────────────────────────────── Vanilla ← Configure ──┤
function! s:configure_vanilla() abort
  " ────────────────────────────── Enable ← `jedi-vim` ← Vanilla ← Configure ──┤
  " Disable the standalone completion (jedi is only used as backend for
  " `neocomplete`.
  let g:jedi#completions_enabled=0
  let g:jedi#auto_vim_configuration=0
  " Don't popup automatically the first completion element.
  let g:jedi#popup_select_first=0
  " ──────────────────────── Misc Options ← `jedi-vim` ← Vanilla ← Configure ──┤
  " `jedi` displays function call signatures in insert mode in real-time,
  " highlighting the current argument. The call signatures will be displayed in
  " Vim's command line aligned with the function call.
  let g:jedi#show_call_signatures='2'
  " ──────────────────────────────────── `neocomplete` ← Vanilla ← Configure ──┤
  " Set `omnifunc`.
  " Needed because we set `g:jedi#completions_enabled=0` to skip the
  " direct usage of `jedi-vim`, but it's there where the plugin also
  " registers the `omnifunc`.
  autocmd FileType python setlocal omnifunc=jedi#completions
  " Set source.
  let g:neocomplete#force_omni_input_patterns.python =
        \ '\%([^. \t]\.\|^\s*@\|^\s*from\s.\+import \|^\s*from \|^\s*import \)\w*'
  " ────────────────────────────────────────── Hotkeys ← Vanilla ← Configure ──┤
  let s:jedi_leader='<%= local! :leader %>'
  let g:jedi#goto_command=s:jedi_leader . 'gc'
  let g:jedi#goto_assignments_command=s:jedi_leader . 'ga'
  let g:jedi#documentation_command=s:jedi_leader . 'd'
  let g:jedi#rename_command=s:jedi_leader . 'r'
  let g:jedi#usages_command=s:jedi_leader . 'u'
endfunction
" ─────────────────────────────────────────────────────── NeoVim ← Configure ──┤
function! s:configure_neovim() abort
  " ─────────────────────────────────── `deoplete-jedi` ← NeoVim ← Configure ──┤
  let g:deoplete#sources#jedi#statement_length=64
  let g:deoplete#sources#jedi#show_docstring=1
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘


" vim: set filetype=eruby.vim :
