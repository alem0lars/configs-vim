" ─────────────────────────────────────────────────────────────────────────────┐
"                                                                              │
" Name:    elems/plugins/unite.vim.tt                                          │
" Summary: Configure plugin `Shougo/unite` and its plugins.                    │
" Depends:                                                                     │
"   TODO                                                                       │
"                                                                              │
" Authors:                                                                     │
"   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              │
"                                                                              │
" Project:                                                                     │
"   - Homepage:        https://github.com/alem0lars/configs-vim                │
"   - Getting started: see README.md in the project root folder                │
"                                                                              │
" License: Apache v2.0 (see below)                                             │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
"                                                                              │
" Licensed to the Apache Software Foundation (ASF) under one more contributor  │
" license agreements.  See the NOTICE file distributed with this work for      │
" additional information regarding copyright ownership. The ASF licenses this  │
" file to you under the Apache License, Version 2.0 (the "License"); you may   │
" not use this file except in compliance with the License.                     │
" You may obtain a copy of the License at                                      │
"                                                                              │
"   http://www.apache.org/licenses/LICENSE-2.0                                 │
"                                                                              │
" Unless required by applicable law or agreed to in writing, software          │
" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    │
" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             │
" See the License for the specific language governing permissions and          │
" limitations under the License.                                               │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┘

" ────────────────────────────────────────────────────────────── Declaration ──┐
function! plugins#unite#declare() abort
  Plug 'Shougo/unite.vim'
  Plug 'Shougo/neomru.vim'
  Plug 'Shougo/unite-build'
  Plug 'Shougo/unite-help'
  Plug 'Shougo/junkfile.vim'
  Plug 'sgur/unite-qf'
  Plug 'Shougo/unite-outline'
  Plug 'tsukkee/unite-tag'
  Plug 'Shougo/unite-session'
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" ──────────────────────────────────────────────────────────── Configuration ──┐
function! plugins#unite#configure() abort
  call plugins#unite#configure_settings()
  call plugins#unite#configure_mappings()
endfunction
" ───────────────────────────────────────────────────── Settings ← Configure ──┤
function! plugins#unite#configure_settings() abort
  " Set the grep command used by unite (and its cli arguments).
  if executable('ag')
    let g:unite_source_grep_command='ag'
    let g:unite_source_grep_default_opts='--line-numbers --nogroup --nocolor
          \ --follow --hidden --ignore-case --skip-vcs-ignores'
  endif

  " TODO: Configure unite options (`:he unite-options`)

  " ───────────────────────────────────────── Matcher ← Settings ← Configure ──┤
  " Default matcher.
  call unite#filters#matcher_default#use(['matcher_regexp'])
  " Use fuzzy matcher for file sources.
  call unite#custom#source(
        \ 'file,file/new,buffer,file_rec,neomru/directory,neomru/file',
        \ 'matchers',
        \ 'matcher_fuzzy')
  " ─────────────────────────────────────────── Sorter ← Settings ← Configure ──┤
  " Default sorter.
  call unite#filters#sorter_default#use(['sorter_rank'])
  " Use selecta scoring algorithm for file sources.
  call unite#custom#source(
        \ 'file,file/new,buffer,file_rec,neomru/directory,neomru/file',
        \ 'sorters',
        \ 'sorter_selecta')
endfunction
" ───────────────────────────────────────────────────── Mappings ← Configure ──┤
function! plugins#unite#configure_mappings() abort
  autocmd FileType unite call <SID>configure_ft_mappings()

  " ────────────────────────────────────────── Buffer ← Mappings ← Configure ──┤
  " <Leader>unb: Buffer switching.
  nnoremap <silent> <Leader>unb :<C-u>Unite -quick-match -buffer-name=buffers
        \ buffer<CR>
  " ────────────────────────────────────────── Search ← Mappings ← Configure ──┤
  " <Leader>ung: Start a grep search from the current directory.
  nnoremap <silent> <Leader>ung :<C-u>Unite -buffer-name=grep grep:.<CR>

  " <Leader>uns: Perform file search, like control-p.
  nnoremap <silent> <Leader>uns :<C-u>Unite -buffer-name=files -start-insert
        \ file_rec/async:!<CR>

  nnoremap <silent> <Leader>un/
        \ :<C-u>Unite -buffer-name=search%`bufnr('%')` -start-insert
        \ line:forward:wrap<CR>
  nnoremap <silent> <Leader>un?
        \ :<C-u>Unite -buffer-name=search%`bufnr('%')` -start-insert
        \ line:backward<CR>
  nnoremap <silent> <Leader>un*
        \ :<C-u>UniteWithCursorWord -buffer-name=search%`bufnr('%')`
        \ line:forward:wrap<CR>
  nnoremap <silent> <Leader>unn
          \ :<C-u>UniteResume search%`bufnr('%')`
          \  -no-start-insert -force-redraw<CR>

  " <Leader>unj: Browse most recently used files.
  nnoremap <silent> <Leader>unj :<C-u>Unite -buffer-name=files
        \ -default-action=lcd neomru/file<CR>
  " <Leader>unJ: Browse most recently used directories.
  nnoremap <silent> <Leader>unJ :<C-u>Unite -buffer-name=files
        \ -default-action=lcd neomru/directory<CR>
  " ─────────────────────────────────────── Bookmarks ← Mappings ← Configure ──┤
  " <Leader>unk: Bookmark file (from current directory).
  nnoremap <silent> <Leader>unk :<C-u>UniteWithCurrentDir -buffer-name=files
        \ buffer bookmark file<CR>
  " <Leader>unK: Bookmark file (from current buffer's directory).
  nnoremap <silent> <Leader>unK :<C-u>UniteWithBufferDir -buffer-name=files
        \ buffer bookmark file<CR>
  " ──────────────────────────────────────────── Yank ← Mappings ← Configure ──┤
  " <Leader>unr: Show registers state.
  nnoremap <silent> <Leader>unr :<C-u>Unite -buffer-name=register register<CR>
  " <Leader>uny: Open yank history.
  nnoremap <silent> <Leader>uny :<C-u>Unite -buffer-name=yank_history
        \ history/yank<CR>
  " ──────────────────────────────────────────── Misc ← Mappings ← Configure ──┤
  " <Leader>unm: Show the defined mappings.
  nnoremap <silent> <Leader>unm :<C-u>Unite mapping<CR>
  " <Leader>unl: Show the list of unite sources.
  nnoremap <silent> <Leader>unl :<C-u>Unite source<CR>
  " <Leader>unu: Resume a previous unite action.
  nnoremap <silent> <Leader>unu :<C-u>Unite -buffer-name=resume resume<CR>
  " ─────────────────────────────────────────── Build ← Mappings ← Configure ──┤
  nnoremap <silent> <Leader>unB :<C-u>Unite -buffer-name=build build<CR>
  " ──────────────────────────────────────────── Help ← Mappings ← Configure ──┤
  " <Leader>unh: Execute help.
  nnoremap <silent> <Leader>unh :<C-u>Unite -buffer-name=help help<CR>
  " <Leader>unH: Execute help by cursor keyword.
  nnoremap <silent> <Leader>unH :<C-u>UniteWithCursorWord help<CR>
  " ──────────────────────────────────────── Junkfile ← Mappings ← Configure ──┤
  " <Leader>js: Open UI for creating a new junkfile.
  nnoremap <silent> <Leader>unf :<C-u>Unite junkfile/new junkfile
        \ -start-insert<CR>
  " ──────────────────────────────────────── Quickfix ← Mappings ← Configure ──┤
  nnoremap <silent> <Leader>unq :<C-u>Unite qf -buffer-name=quickfix<CR>
  " ───────────────────────────────────────── Outline ← Mappings ← Configure ──┤
  nnoremap <silent> <Leader>uno :<C-u>Unite outline -no-start-insert -resume<CR>
  " ───────────────────────────────────────── Session ← Mappings ← Configure ──┤
  " <Leader>unSl: New session.
  nnoremap <silent> <Leader>unSn :<C-u>Unite session/new<CR>
  " <Leader>unSl: List sessions.
  nnoremap <silent> <Leader>unSl :<C-u>Unite session<CR>
  " ───────────────────────────────────────────── Tag ← Mappings ← Configure ──┤
  nnoremap <silent><expr> <Leader>untt &filetype == 'help' ? "g\<C-]>" :
        \ ':\<C-u>UniteWithCursorWord -buffer-name=tag -immediately tag
        \ tag/include\<CR>'

  nnoremap <silent><expr> <Leader>untp  &filetype == 'help' ?
        \ ':\<C-u>pop\<CR>' : ':\<C-u>Unite jump\<CR>'
endfunction

function! s:configure_ft_mappings() abort
  " <C->movement: navigate in the unite buffer
  imap <buffer> <C-j> <Plug>(unite_select_next_line)
  imap <buffer> <C-k> <Plug>(unite_select_previous_line)
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" vim: set filetype=eruby.vim :
