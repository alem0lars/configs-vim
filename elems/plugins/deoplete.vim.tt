" ─────────────────────────────────────────────────────────────────────────────┐
"                                                                              │
" Name:    elems/plugins/deoplete.vim.tt                                       │
" Summary: Configure plugin `Shougo/deoplete.nvim`                             │
"                                                                              │
" Authors:                                                                     │
"   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              │
"                                                                              │
" Project:                                                                     │
"   - Homepage:        https://github.com/alem0lars/configs-vim                │
"   - Getting started: see README.md in the project root folder                │
"                                                                              │
" License: Apache v2.0 (see below)                                             │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
"                                                                              │
" Licensed to the Apache Software Foundation (ASF) under one more contributor  │
" license agreements.  See the NOTICE file distributed with this work for      │
" additional information regarding copyright ownership. The ASF licenses this  │
" file to you under the Apache License, Version 2.0 (the "License"); you may   │
" not use this file except in compliance with the License.                     │
" You may obtain a copy of the License at                                      │
"                                                                              │
"   http://www.apache.org/licenses/LICENSE-2.0                                 │
"                                                                              │
" Unless required by applicable law or agreed to in writing, software          │
" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    │
" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             │
" See the License for the specific language governing permissions and          │
" limitations under the License.                                               │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┘


" ────────────────────────────────────────────────────────────── Declaration ──┐
function! plugins#deoplete#declare() abort
  Plug 'Shougo/deoplete.nvim'
  Plug 'Shougo/neopairs.vim'
  Plug 'Shougo/neoinclude.vim'
  Plug 'Shougo/echodoc.vim'
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" ──────────────────────────────────────────────────────────── Configuration ──┐
function! plugins#deoplete#configure() abort
  " ───────────────────────────────────────────────── `neopairs` ← Configure ──┤
  " Enable `neopairs`.
  let g:neopairs#enable=1
  " ──────────────────────────────────────── Enable ← `deoplete` ← Configure ──┤
  " Disable autocomplpop.
  let g:acp_enableAtStartup=0
  " Enable deoplete.
  let g:deoplete#enable_at_startup=1
  " ───────────────────────────────────── Behaviour ← `deoplete` ← Configure ──┤
  " Use smartcase.
  let g:deoplete#enable_smart_case=1
  " Enable match camel case.
  let g:deoplete#enable_camel_case=1
  " Refresh the candidates automatically.
  let g:deoplete#enable_refresh_always=1
  " Minimum char completion lengths.
  let g:deoplete#auto_complete_start_length=2
  " Add delay
  let g:deoplete#auto_complete_delay=128
  " Automatically close preview after completion is done.
  autocmd! InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif
  " ────────────────────────────── Keyword Patterns ← `deoplete` ← Configure ──┤
  let g:deoplete#keyword_patterns = {}
  let g:deoplete#keyword_patterns._ = '[a-zA-Z_]\k*\(?'
  " ──────────────────────────────── Input Patterns ← `deoplete` ← Configure ──┤
  let g:deoplete#omni#input_patterns = {}
  " ───────────────────────────────────── Functions ← `deoplete` ← Configure ──┤
  let g:deoplete#omni#functions = {}
  " ─────────────────────────────────────── Hotkeys ← `deoplete` ← Configure ──┤
  " <TAB>: completion.
  inoremap <silent><expr> <TAB>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<TAB>" :
        \ deoplete#mappings#manual_complete()

  " <S-TAB>: completion back.
  inoremap <expr><S-TAB>  pumvisible() ? "\<C-p>" : "\<C-h>"

  " <C-h> or <BS>: Close popup and delete backward char.
  inoremap <expr><C-h> deoplete#mappings#smart_close_popup()."\<C-h>"
  inoremap <expr><BS> deoplete#mappings#smart_close_popup()."\<C-h>"

  inoremap <expr><C-g> deoplete#mappings#undo_completion()

  " <CR>: Close the popup (and save indent).
  inoremap <silent> <CR> <C-r>=<SID>close_popup()<CR>
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" ───────────────────────────────────────────────────────────────── Internal ──┐
function! s:close_popup() abort
  return deoplete#mappings#close_popup() . "\<CR>"
endfunction

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1] =~ '\s'
endfunction
" ─────────────────────────────────────────────────────────────────────────────┘

" call deoplete#custom#set('_', 'matchers', ['matcher_head'])
" call deoplete#custom#set('ghc', 'sorters', ['sorter_word'])
" call deoplete#custom#set('buffer', 'mark', '')
" call deoplete#custom#set('_', 'matchers', ['matcher_full_fuzzy'])
" call deoplete#custom#set('_', 'disabled_syntaxes', ['Comment', 'String'])
" call deoplete#custom#set('buffer', 'mark', '*')

" Use auto delimiter
" call deoplete#custom#set('_', 'converters',
"       \ ['converter_auto_paren',
"       \  'converter_auto_delimiter', 'remove_overlap'])
" call deoplete#custom#set('_', 'converters', [
"       \ 'converter_remove_paren',
"       \ 'converter_remove_overlap',
"       \ 'converter_truncate_abbr',
"       \ 'converter_truncate_menu',
"       \ 'converter_auto_delimiter',
"       \ ])

" call deoplete#custom#set('buffer', 'min_pattern_length', 9999)
" call deoplete#custom#set('clang', 'input_pattern', '\.\w*|\.->\w*|\w+::\w*')
" call deoplete#custom#set('clang', 'max_pattern_length', -1)

" inoremap <silent><expr> <C-t> deoplete#mappings#manual_complete('file')


" vim: set filetype=eruby.vim :
