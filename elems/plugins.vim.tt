" ─────────────────────────────────────────────────────────────────────────────┐
"                                                                              │
" Name:    elems/plugins.vim.tt                                                │
" Summary: Include vim plugins.                                                │
"                                                                              │
" Authors:                                                                     │
"   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              │
"                                                                              │
" Project:                                                                     │
"   - Homepage:        https://github.com/alem0lars/configs-vim                │
"   - Getting started: see README.md in the project root folder                │
"                                                                              │
" License: Apache v2.0 (see below)                                             │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
"                                                                              │
" Licensed to the Apache Software Foundation (ASF) under one more contributor  │
" license agreements.  See the NOTICE file distributed with this work for      │
" additional information regarding copyright ownership. The ASF licenses this  │
" file to you under the Apache License, Version 2.0 (the "License"); you may   │
" not use this file except in compliance with the License.                     │
" You may obtain a copy of the License at                                      │
"                                                                              │
"   http://www.apache.org/licenses/LICENSE-2.0                                 │
"                                                                              │
" Unless required by applicable law or agreed to in writing, software          │
" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    │
" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             │
" See the License for the specific language governing permissions and          │
" limitations under the License.                                               │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
<% define_locals do
  variable :"vim.vimplug.cache_dir", type: :directory, as: :cache_dir
end -%>
" ─────────────────────────────────────────────────────────────────────────────┘


" ──────────────────────────────────────────────────────── Declare ← Plugins ──┐
call plug#begin('<%= local! :cache_dir %>')
" ──────────────────────────────────────────────── Async ← Declare ← Plugins ──┤
<% if has_feature? :vanilla %>
call plugins#vimproc#declare()
<% end %>
" ────────────────────────────────────────────── Editing ← Declare ← Plugins ──┤
call plugins#context_filetype#declare()
call plugins#repeat#declare()
call plugins#surround#declare()
call plugins#unimpaired#declare()
call plugins#abolish#declare()
call plugins#speeddating#declare()
call plugins#tcomment#declare()
call plugins#lexima#declare()
call plugins#easyalign#declare()
call plugins#multiple_cursors#declare()
call plugins#easymotion#declare()
call plugins#incsearch#declare()
call plugins#over#declare()
call plugins#bbye#declare()
call plugins#nrrwrgn#declare()
call plugins#table_mode#declare()
call plugins#better_whitespace#declare()
call plugins#fastfold#declare()
call plugins#foldtext#declare()
call plugins#drawit#declare()
<% if has_feature? :figlet %>
call plugins#figlet#declare()
<% end %>
call plugins#autotype#declare()
call plugins#cleverf#declare()
call plugins#txtfmt#declare()
call plugins#ansiesc#declare()
" ────────────────────────────── Collaborative ← Editing ← Declare ← Plugins ──┤
<% if has_feature? :collaborative %>
call plugins#floobits#declare()
<% end %>
" ─────────────────────────────────────────────────── UI ← Declare ← Plugins ──┤
call plugins#tagbar#declare()
"call plugins#indentline#declare() TODO not always working (sometimes doesnt show up)
call plugins#gitgutter#declare() " must be before signature
call plugins#signature#declare()
call plugins#choosewin#declare()
call plugins#windowswap#declare()
call plugins#taboo#declare()
"call plugins#numbers#declare() TODO slows down vim
<% if has_feature? :vanilla %>
call plugins#unite#declare()
<% end %>
<% if has_feature? :neovim %>
call plugins#denite#declare()
<% end %>
" ───────────────────────────────────────── Syntax Check ← Declare ← Plugins ──┤
call plugins#ale#declare()
" ───────────────────────────────────────────── Template ← Declare ← Plugins ──┤
call plugins#template#declare()
" ────────────────────────────── AutoComplete & Snippets ← Declare ← Plugins ──┤
<% if has_feature? :vanilla %>
call plugins#neocomplete#declare()
<% end %>
<% if has_feature? :neovim %>
call plugins#deoplete#declare()
<% end %>
call plugins#neosnippet#declare()
" ────────────────────────────────────────────────── Doc ← Declare ← Plugins ──┤
call plugins#man#declare()
<% if has_feature? :dasht %>
call plugins#dasht#declare()
<% end %>
" ──────────────────────────────────────── Notes & Tasks ← Declare ← Plugins ──┤
call plugins#vimoutliner#declare()
call plugins#vimwiki#declare()
<% if has_feature? :taskwarrior %>
call plugins#taskwarrior#declare()
<% end %>
" ──────────────────────────────────────────────── Langs ← Declare ← Plugins ──┤
call plugins#langs#vimscript#declare()
call plugins#langs#toml#declare()
call plugins#langs#mediawiki#declare()
<% if has_feature? :c, :cpp, :objc, :objcpp, match: :any? %>
call plugins#langs#c_based#declare()
<% end %>
<% if has_feature? :ruby %>
call plugins#langs#ruby#declare()
<% end %>
<% if has_feature? :haskell %>
call plugins#langs#haskell#declare()
<% end %>
<% if has_feature? :rust %>
call plugins#langs#rust#declare()
<% end %>
<% if has_feature? :python %>
call plugins#langs#python#declare()
<% end %>
<% if has_feature? :javascript %>
call plugins#langs#javascript#declare()
<% end %>
<% if has_feature? :typescript %>
call plugins#langs#typescript#declare()
<% end %>
<% if has_feature? :powershell %>
call plugins#langs#powershell#declare()
<% end %>
<% if has_feature? :tex %>
call plugins#langs#tex#declare()
<% end %>
<% if has_feature? :tmux %>
call plugins#langs#tmux#declare()
<% end %>
<% if has_feature? :plantuml %>
call plugins#langs#plantuml#declare()
<% end %>
<% if has_feature? :systemd %>
call plugins#langs#systemd#declare()
<% end %>
<% if has_feature? :bro %>
call plugins#langs#bro#declare()
<% end %>
<% if has_feature? :salt %>
call plugins#langs#salt#declare()
<% end %>
<% if has_feature? :xml %>
call plugins#langs#xml#declare()
<% end %>
" ──────────────────────────────────────────────── Shell ← Declare ← Plugins ──┤
call plugins#vimshell#declare()
<% if has_feature? :neovim %>
call plugins#iron#declare()
<% end %>
" ────────────────────────────────────────────────── VCS ← Declare ← Plugins ──┤
call plugins#fugitive#declare()
" ───────────────────────────────────────────────── Undo ← Declare ← Plugins ──┤
call plugins#undotree#declare()
call plugins#peekaboo#declare()
" ───────────────────────────────────── Files Management ← Declare ← Plugins ──┤
<% if has_feature? :vanilla %>
call plugins#vimfiler#declare()
<% end %>
call plugins#sudoedit#declare()
call plugins#rooter#declare()
call plugins#fzf#declare()
<% if has_feature? :neovim %>
call plugins#far#declare()
<% end %>
call plugins#grepper#declare()
" ───────────────────────────────────────────────── Misc ← Declare ← Plugins ──┤
call plugins#prettyprint#declare()
" ─────────────────────────────────────────── Statusline ← Declare ← Plugins ──┤
call plugins#airline#declare()
" ────────────────────────────────────────── Colorscheme ← Declare ← Plugins ──┤
call plugins#colorscheme#declare()
" ─────────────────────────────────────────────────────────────────────────────┤
call plug#end()
" ─────────────────────────────────────────────────────────────────────────────┘

" ────────────────────────────────────────────────────── Configure ← Plugins ──┐
" ────────────────────────────────────────────── Async ← Configure ← Plugins ──┤
<% if has_feature? :vanilla %>
call plugins#vimproc#configure()
<% end %>
" ──────────────────────────────────────────── Editing ← Configure ← Plugins ──┤
call plugins#surround#configure()
call plugins#tcomment#configure()
call plugins#easyalign#configure()
call plugins#multiple_cursors#configure()
call plugins#easymotion#configure()
call plugins#incsearch#configure()
call plugins#over#configure()
call plugins#bbye#configure()
call plugins#better_whitespace#configure()
call plugins#fastfold#configure()
call plugins#foldtext#configure()
call plugins#drawit#configure()
call plugins#cleverf#configure()
call plugins#txtfmt#configure()
call plugins#ansiesc#configure()
" ──────────────────────────── Collaborative ← Editing ← Configure ← Plugins ──┤
<% if has_feature? :collaborative %>
call plugins#floobits#configure()
<% end %>
" ───────────────────────────────────────────────── UI ← Configure ← Plugins ──┤
call plugins#tagbar#configure()
"call plugins#indentline#configure() TODO (see declare)
call plugins#gitgutter#configure()
call plugins#signature#configure()
call plugins#choosewin#configure()
call plugins#windowswap#configure()
call plugins#taboo#configure()
"call plugins#numbers#configure() TODO (see declare)
<% if has_feature? :vanilla %>
call plugins#unite#configure()
<% end %>
<% if has_feature? :neovim %>
call plugins#denite#configure()
<% end %>
" ─────────────────────────────────────── Syntax Check ← Configure ← Plugins ──┤
call plugins#ale#configure()
" ─────────────────────────────────────────── Template ← Configure ← Plugins ──┤
call plugins#template#configure()
" ──────────────────────────── AutoComplete & Snippets ← Configure ← Plugins ──┤
<% if has_feature? :vanilla %>
call plugins#neocomplete#configure()
<% end %>
<% if has_feature? :neovim %>
call plugins#deoplete#configure()
<% end %>
call plugins#neosnippet#configure()
" ──────────────────────────────────────────────── Doc ← Configure ← Plugins ──┤
call plugins#man#configure()
<% if has_feature? :dasht %>
call plugins#dasht#configure()
<% end %>
" ────────────────────────────────────── Notes & Tasks ← Configure ← Plugins ──┤
call plugins#vimoutliner#configure()
call plugins#vimwiki#configure()
<% if has_feature? :taskwarrior %>
call plugins#taskwarrior#configure()
<% end %>
" ────────────────────────────────────────────── Langs ← Configure ← Plugins ──┤
call plugins#langs#vimscript#configure()
<% if has_feature? :c, :cpp, :objc, :objcpp, match: :any? %>
call plugins#langs#c_based#configure()
<% end %>
<% if has_feature? :ruby %>
call plugins#langs#ruby#configure()
<% end %>
<% if has_feature? :python %>
call plugins#langs#python#configure()
<% end %>
<% if has_feature? :haskell %>
call plugins#langs#haskell#configure()
<% end %>
<% if has_feature? :rust %>
call plugins#langs#rust#configure()
<% end %>
<% if has_feature? :javascript %>
call plugins#langs#javascript#configure()
<% end %>
<% if has_feature? :typescript %>
call plugins#langs#typescript#configure()
<% end %>
<% if has_feature? :powershell %>
call plugins#langs#powershell#configure()
<% end %>
<% if has_feature? :tex %>
call plugins#langs#tex#configure()
<% end %>
<% if has_feature? :plantuml %>
call plugins#langs#plantuml#configure()
<% end %>
<% if has_feature? :bro %>
call plugins#langs#bro#configure()
<% end %>
<% if has_feature? :salt %>
call plugins#langs#salt#configure()
<% end %>
<% if has_feature? :xml %>
call plugins#langs#xml#configure()
<% end %>
" ────────────────────────────────────────────── Shell ← Configure ← Plugins ──┤
call plugins#vimshell#configure()
<% if has_feature? :neovim %>
call plugins#iron#configure()
<% end %>
" ──────────────────────────────────────────────── VCS ← Configure ← Plugins ──┤
" ─────────────────────────────────────────────── Undo ← Configure ← Plugins ──┤
call plugins#undotree#configure()
call plugins#peekaboo#configure()
" ─────────────────────────────────── Files Management ← Configure ← Plugins ──┤
<% if has_feature? :vanilla %>
call plugins#vimfiler#configure()
<% end %>
call plugins#fzf#configure()
<% if has_feature? :neovim %>
call plugins#far#configure()
<% end %>
call plugins#grepper#configure()
" ─────────────────────────────────────────────── Misc ← Configure ← Plugins ──┤
" ───────────────────────────────────────── Statusline ← Configure ← Plugins ──┤
call plugins#airline#configure()
" ──────────────────────────────────────── Colorscheme ← Configure ← Plugins ──┤
call plugins#colorscheme#configure()
" ─────────────────────────────────────────────────────────────────────────────┘


" vim: set filetype=eruby.vim :
