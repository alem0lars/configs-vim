" ─────────────────────────────────────────────────────────────────────────────┐
"                                                                              │
" File informations:                                                           │
" - Name:    elems/plugins.vim.tt                                              │
" - Summary: The Vim plugins definition.                                       │
" - Authors:                                                                   │
"   - Alessandro Molari <molari.alessandro@gmail.com> (alem0lars)              │
"                                                                              │
" Project informations:                                                        │
"   - Homepage:        https://github.com/alem0lars/configs-vim                │
"   - Getting started: see README.md in the project root folder                │
"                                                                              │
" License: Apache v2.0 (see below)                                             │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
"                                                                              │
" Licensed to the Apache Software Foundation (ASF) under one more contributor  │
" license agreements.  See the NOTICE file distributed with this work for      │
" additional information regarding copyright ownership. The ASF licenses this  │
" file to you under the Apache License, Version 2.0 (the "License"); you may   │
" not use this file except in compliance with the License.                     │
" You may obtain a copy of the License at                                      │
"                                                                              │
"   http://www.apache.org/licenses/LICENSE-2.0                                 │
"                                                                              │
" Unless required by applicable law or agreed to in writing, software          │
" distributed under the License is distributed on an "AS IS" BASIS, WITHOUT    │
" WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.             │
" See the License for the specific language governing permissions and          │
" limitations under the License.                                               │
"                                                                              │
" ─────────────────────────────────────────────────────────────────────────────┤
<% define_locals do
  prefixed(:"vim.") do
    variable :base_dir,    type: :directory
    variable :assets_dir,  type: :directory, default: local!(:base_dir).join("assets")
    variable :plugins_dir, type: :directory
  end

  computed(:dein_dir, type: :directory) do
    local!(:plugins_dir).join(*%w(repos github.com Shougo dein.vim))
  end
  computed(:dein_cache_dir, type: :directory) {"~/.cache/dein"}
end -%>
" ─────────────────────────────────────────────────────────────────────────────┘

" ──────────────────────────────────────────────────── Load ← Plugin Manager ──┐
if has('vim_starting')
  execute ' set runtimepath^=' . substitute(
          \ fnamemodify('<%= local! :dein_dir %>', ':p') , '/$', '', '')
endif
" ─────────────────────────────────────────── Configuration ← Plugin Manager ──┤
let g:dein#enable_notification = 1
let g:dein#notification_icon = '<%= local! :assets_dir %>/warn.png'
let g:dein#install_progress_type = 'title'
let g:dein#install_message_type = 'none'
" ─────────────────────────────────────────────────────────────────────────────┘

" ────────────────────────────────────────────────────────────────── Plugins ──┐
if dein#load_state(expand('<%= local! :dein_cache_dir %>'))
  call dein#begin(expand('<%= local! :dein_cache_dir %>'))
" ──────────────────────────────────────────────────────── Editing ← Plugins ──┤
  " Mappings:
  " - `.`: Perform repeat.
  call dein#add('tpope/vim-repeat')

  " Mappings:
  " - `ds`:  Delete surroundings.
  " - `cs`:  Change surroundings.
  " - `ys`:  Wrap a valid text-object or motion.
  " - `yS`:  Wrap and indent.
  " - `ySS`: Wrap and place it on a new line.
  " - `yss`: Wrap the current line.
  call dein#add('tpope/vim-surround', {
        \ 'depends': ['vim-repeat'],
        \ 'hook_post_source': 'call RC_surround_hook_post_source()',
        \ })

  " Mappings:
  " - `[`*: Previous mappings.
  " - `]`*: Next mappings.
  " - `>p`: Paste after linewise, increasing indent.
  " - `>P`: Paste before linewise, increasing indent.
  " - `<p`: Paste after linewise, decreasing indent.
  " - `<P`: Paste before linewise, decreasing indent.
  " - `=p`: Paste after linewise, reindenting.
  " - `=P`: Paste before linewise, reindenting.
  call dein#add('tpope/vim-unimpaired', {
        \ 'depends': ['vim-repeat'],
        \ })

  call dein#add('tpope/vim-abolish', {
        \ 'depends': ['vim-repeat'],
        \ })

  " Mappings:
  " - `<C-x>`: Decrement. TODO overlaps with vim-multiple-cursors
  " - `<C-a>`: Increment.
  call dein#add('tpope/vim-speeddating', {
        \ 'depends': ['vim-repeat'],
        \ })

  " Mappings:
  " - `gc`*:        Toggle comments.
  " - `gc<`*:       Uncomment operations.
  " - `gc>`*:       Comment operations.
  " - `<Leader>_`*: Primary keymaps.
  " - `<C-_>`*:     Secondary keymaps.
  call dein#add('tomtom/tcomment_vim', {
        \ 'hook_post_source': 'call RC_tcomment_hook_post_source()',
        \ })

  call dein#add('cohama/lexima.vim')

  " Mappings:
  " - `ga`: Start EasyAlign in interactive mode.
  call dein#add('junegunn/vim-easy-align', {
        \ 'hook_post_source': 'call RC_easyalign_hook_post_source()',
        \ })

  " Mappings:
  " - `<C-n>`: Add virtual cursor.
  " - `<C-p>`: Previous cursor.
  " - `<C-x>`: Remove cursor. TODO overlaps with vim-multiple-cursors
  call dein#add('terryma/vim-multiple-cursors', {
        \ 'hook_post_source': 'call RC_multiple_cursors_hook_post_source()',
        \ })

  " TODO: Check if it's incompatible with the completion plugin.
  " Mappings:
  " - `<Leader><Leader>`*: All mappings are under the double leader prefix.
  call dein#add('easymotion/vim-easymotion', {
        \ 'depends': ['vim-repeat'],
        \ 'hook_post_source': 'call RC_easymotion_hook_post_source()',
        \ })
  call dein#add('haya14busa/incsearch.vim')
  call dein#add('haya14busa/incsearch-fuzzy.vim', {
        \ 'depends': ['incsearch.vim'],
        \ })
  call dein#add('haya14busa/incsearch-easymotion.vim', {
        \ 'depends': ['incsearch.vim', 'vim-easymotion'],
        \ })
" ─────────────────────────────────────────────────────────────────────────────┘
  call dein#end()
  call dein#save_state()

  if dein#check_install()
    call dein#install()
  endif
endif

" Call hooks for non-lazy plugins (they aren't called automatically, issue#50).
autocmd VimEnter * call dein#call_hook('source')
autocmd VimEnter * call dein#call_hook('post_source')

filetype plugin indent on
syntax enable

" vim: set filetype=eruby.vim :
